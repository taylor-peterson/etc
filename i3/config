# TODO startup notifications?
# TODO it is possible to mark windows like lines in vim - investigate further - documentation is unclear
# TODO closing lid does nothing when powered, but suspends otherwise.

# TODO Update the below and add charts for chords
# ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━━┓
# │     │  w1 │  w2 │  w3 │  w4 │  w5 │  w6 │  w7 │  w8 │  w9 │  w10│     │     ┃          ┃
# │ `   │ 1   │ 2   │ 3   │ 4   │ 5   │ 6   │ 7   │ 8   │ 9   │ 0   │ -   │ =   ┃ ⌫        ┃
# ┢━━━━━┷━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┺━━┯━━━━━━━┩
# ┃        ┃     │close│     │rsize│     │     │ prev│ next│split│start│     │ }   │ |     │
# ┃ ↹      ┃ q   │ w   │ e   │ r   │ t   │ y   │ u   │ i   │ o   │ p   │ [   │ ]   │ \     │
# ┣━━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┲━━━━┷━━━━━━━┪
# ┃         ┃ tab │stack│ div.│ full│     │     │focus│focus│focus│focus│     ┃New Terminal┃
# ┃ ⇬       ┃ a   │ s   │ d   │ f   │ g   │ h   │ j ← │ k ↓ │ l ↑ │ ; → │ '   ┃ ⏎          ┃
# ┣━━━━━━━━━┻━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┲━━┻━━━━━━━━━━━━┫
# ┃            ┃     │     │     │     │bordr│     │     │     │     │     ┃               ┃
# ┃ ⇧          ┃ z   │ x   │ c   │ v   │ b   │ n   │ m   │ ,   │ .   │ /   ┃ ⇧             ┃
# ┣━━━━━━━┳━━━━┻━━┳━━┷━━━━┱┴─────┴─────┴─────┴─────┴─────┴─┲━━━┷━━━┳━┷━━━━━╋━━━━━━━┳━━━━━━━┫
# ┃       ┃ *mod* ┃       ┃         tiling/floating toggle ┃       ┃       ┃       ┃       ┃
# ┃ Ctrl  ┃ super ┃ Alt   ┃ Space                          ┃ AltGr ┃ super ┃ menu  ┃ Ctrl  ┃
# ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┻━━━━━━━┛


# ------------
# Syntax Notes
# ------------
# Comments can only be used at the start of lines
# Chain commands with ';' or ','
#     - Criteria apply only until the next semicolon
# px arg is used for floating containers; ppt is percentage points for tiling containers
# Use --no-startup-id because i3 is a command-line utility and does not support startup notifications
# exec commands will be performed by i3 on initial startup
# exec_always will also run when restarting i3
# Line continuation is indicated by "\"

# -----
# Setup
# -----
focus_follows_mouse no

# Don't "warp" cursor to the center of the screen when focusing on another output.
mouse_warping none

# Mod4 = super
set $mod Mod4

# Font for window titles and bar (unless overridden in bar {} block).
font pango: Monospace 9

# Makes it so that $mod+<current workspace> switches you back to the previous workspace.
workspace_auto_back_and_forth yes

# Switching to a workpsace with an urgent hint may auto-focus on that window and remove the hint.
# This delays resetting the urgency state to make it easier to identify the hinting window.
force_display_urgency_hint 500 ms

# Find the native resolution of the device connected to DP1 and configure it to the left of eDP1
exec_always --no-startup-id xrandr --output DP1 --auto --left-of eDP1

# --------------
# Start Programs
# --------------
exec_always --no-startup-id conky
exec_always --no-startup-id feh --bg-scale ~/Pictures/ubuntu-blue-1440x900.jpg

# -----------------
# Program Shortcuts
# -----------------
bindsym $mod+Return exec i3-sensible-terminal

# Start program launcher
# Colors are based on default workspace colors for i3.
# Note that bg-active only works when the active window:
#     https://github.com/DaveDavenport/rofi/issues/294.
set $rofi_options -bg "#222222" -bg-active "#1b3a51" bg-urgent "#900000" \
                  -fg "#888888" -fg-active "#ffffff" fg-urgent "#ffffff" \
                  -hlbg "#285577" -hlbg-active "#285577" -hlbg-urgent "#285577" \
                  -hlfg "#ffffff" -hlfg-active "#ffffff" -hlfg-urgent "#ffffff" \
                  -bc "#333333"
bindsym $mod+w exec --no-startup-id rofi -show window $rofi_options
bindsym $mod+d exec --no-startup-id rofi -show run $rofi_options -location 2 -lines 5

# TODO - test
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
#bindsym $mod+space exec --no-startup-id rofi -now -bg "#222222" -fg "#888888" -hlbg "#285577" -hlfg "#ffffff"

# ----------
# Control i3
# ----------
# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit (logout) shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# Kill focused window
bindsym $mod+Shift+q kill


# ---------------------------
# Container/Window Management
# ---------------------------

# Change focused window.
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right
bindsym $mod+p focus parent
bindsym $mod+c focus child

# Move focused container.
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# Resize highlighted container.
bindsym $mod+r mode "resize"
mode "resize" {
    set $resize_amount 1 px or 1 ppt

    bindsym j resize grow left $resize_amount
    bindsym k resize grow up $resize_amount
    bindsym l resize grow down $resize_amount
    bindsym semicolon resize grow right $resize_amount

    bindsym Shift+j resize shrink right $resize_amount
    bindsym Shift+k resize shrink down $resize_amount
    bindsym Shift+l resize shrink up $resize_amount
    bindsym Shift+semicolon resize shrink left $resize_amount

    # TODO control variants that resize by 10x?

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Change how focused container should splits. For h, think -; for v think |.
bindsym $mod+h split h
bindsym $mod+v split v

# Enter fullscreen mode.
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
# TODO: get rid of stacking? tabbed?
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# --------------------
# Workspace Management
# --------------------
bindsym $mod+backslash exec i3-input -F 'rename workspace to "%s"' -P 'New name: '

# Name workspaces.
set $ws_1 "1: chrome"
set $ws_2 "2: mail"
set $ws_3 "3: dev"
set $ws_4 "4"
set $ws_5 "5"
set $ws_6 "6"
set $ws_7 "7"
set $ws_8 "8"
set $ws_9 "9: spotify"
set $ws_10 "10"

# Switch workspaces.
# TODO have shortcuts to named workspaces
bindsym $mod+1 workspace $ws_1
bindsym $mod+2 workspace $ws_2
bindsym $mod+3 workspace $ws_3
bindsym $mod+4 workspace $ws_4
bindsym $mod+5 workspace $ws_5
bindsym $mod+6 workspace $ws_6
bindsym $mod+7 workspace $ws_7
bindsym $mod+8 workspace $ws_8
bindsym $mod+9 workspace $ws_9
bindsym $mod+0 workspace $ws_10
bindsym $mod+comma workspace prev
bindsym $mod+period workspace next

# Move focused container to workspace.
bindsym $mod+Shift+1 move container to workspace $ws_1, workspace $ws_1
bindsym $mod+Shift+2 move container to workspace $ws_2, workspace $ws_2
bindsym $mod+Shift+3 move container to workspace $ws_3, workspace $ws_3
bindsym $mod+Shift+4 move container to workspace $ws_4, workspace $ws_4
bindsym $mod+Shift+5 move container to workspace $ws_5, workspace $ws_5
bindsym $mod+Shift+6 move container to workspace $ws_6, workspace $ws_6
bindsym $mod+Shift+7 move container to workspace $ws_7, workspace $ws_7
bindsym $mod+Shift+8 move container to workspace $ws_8, workspace $ws_8
bindsym $mod+Shift+9 move container to workspace $ws_9, workspace $ws_9
bindsym $mod+Shift+0 move container to workspace $ws_10, workspace $ws_10
bindsym $mod+Shift+comma move container to workspace prev, workspace prev
bindsym $mod+Shift+period move container to workspace next, workspace prev

bindsym $mod+Control+semicolon move container to output right, focus output right
bindsym $mod+Control+j move container to output left, focus output left

bindsym $mod+Shift+Control+semicolon move workspace to output right, focus output right
bindsym $mod+Shift+Control+j move workspace to output left, focus output left



# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    #status_command i3status --config ~/.i3/status.conf
    #status_command i3blocks -c ~/lsjflj
    position top
    #tray_output primary
}

# -------------
# Function Keys
# -------------

# Screen Brightness
bindsym XF86MonBrightnessUp exec xbacklight -inc 10
bindsym XF86MonBrightnessDown exec xbacklight -dec 10

# Volume
bindsym XF86AudioRaiseVolume exec amixer -D pulse set Master 5%+ unmute
bindsym XF86AudioLowerVolume exec amixer -D pulse set Master 5%- unmute
bindsym XF86AudioMute exec amixer -D pulse set Master toggle

# Pause/Play/Next/Previous
bindsym XF86AudioPrev exec dbus-send --print-reply \
    --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous
bindsym XF86AudioPlay exec dbus-send --print-reply \
    --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause
bindsym XF86AudioNext exec dbus-send --print-reply \
    --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next

# bindsym thing [instance="blah"] scratchpad show

# i3 "scratchpad" for show/hide window
#exec .local/bin/urxvtq scratchpad_urxvt_top 180x28
#for_window [instance="scratchpad_urxvt_top"] move to scratchpad, border 1pixel
#bindsym Mod1+i exec .local/bin/urxvtq scratchpad_urxvt_top 180x28, [instance="scratchpad_urxvt_left"] move to scratchpad, border 1pixel, [instance="scratchpad_urxvt_bottom"] move to scratchpad, border 1pixel, [instance="scratchpad_urxvt_top"] scratchpad show, move position 45px 0px

#for_window [class="XTerm" instance="dropdown"] floating enable, move scratchpad, scratchpad show, move absolute position 178 -20, move scratchpad
#exec xterm -name dropdown -g 125x32
#bindsym $mod+q [class="XTerm" instance="dropdown"] scratchpad show
# Make a window "sticky" - stay on the screen even if you switch workspaces
# for_window [isntace=blah] sticky enable


set $mode_system System (l) lock, (e) logout, (h) hibernate, (s) suspend, (r) reboot, (p) power-off
bindsym $mod+Escape mode "$mode_system"
mode "$mode_system" {
    set $exec_mode_system_script exec --no-startup-id ~/etc/i3/scripts/mode-system.sh
    set $exit_mode_system mode "default"

    bindsym l $exec_mode_system_script lock, $exit_mode_system
    bindsym e $exec_mode_system_script logout, $exit_mode_system
    bindsym h $exec_mode_system_script hibernate, $exit_mode_system
    bindsym s $exec_mode_system_script suspend, $exit_mode_system
    bindsym r $exec_mode_system_script reboot, $exit_mode_system
    bindsym p $exec_mode_system_script poweroff, $exit_mode_system

    # back to normal: Enter or Escape
    bindsym Return $exit_mode_system
    bindsym Escape $exit_mode_system
}
