#!/bin/bash

############################
# This script does everything necessary to get a linux-box up and running my way by
# installing the correct set of programs and configuring them.
# Note: symlink everything under ~/ where possible to avoid affecting other users.
############################

#### Make ~/ feel like home.
mkdir -p ~/bin ~/etc ~/src ~/tmp

rmdir -p ~/Desktop ~/Documents ~/Downloads ~/Music ~/Pictures ~/Public ~/Templates ~/Videos
rm -f examples.desktop

rm ~/.config/user-dirs.dirs
ln -s ~/etc/user-dirs.dirs ~/.config/user-dirs.dirs
ln -s ~/etc/user-dirs.conf ~/.config/user-dirs.conf
chmod +w ~/etc/user-dirs.dirs
xdg-user-dirs-gtk-update

#### Add sources
# dunst memory-leak https://bugs.launchpad.net/ubuntu/+source/dunst/+bug/1330480
echo "deb http://debian.sur5r.net/i3/ $(lsb_release -c -s) universe" | \
    sudo tee -a /etc/apt/sources.list
sudo add-apt-reposityory ppa:fcws-tw/ppa # vim
sudo add-apt-repository -y "deb http://repository.spotify.com stable non-free"
sudo apt-get --allow-unauthenticated install sur5r-keyring

# Adding repository signing keys to be able to verify downloaded packages.
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys D2C19886 # Spotify

#### Update to pull in the new sources.
# TODO - switch to long form of flags and document
sudo apt-get update -yqq
sudo apt-get update --fix-missing
sudo apt-get upgrade -yqq

#### Install everything you can from apt.
sudo apt-get install -y \
    acpi \
    conky \
    chromium-browser \
    curl \
    git \
    i3 \
    playerctl
    redshift \
    shutter \
    spotify-client \
    tilda \
    tmux \
    tree \
    wicd wicd-curses \
    xbacklight \
    xclip \
    zsh

#### Remove default-installed junk.
sudo apt-get purge -y \
    rhythmbox \
    gwibber \
    liferea \
    indicator-appmenu # Get rid of global menus

# Required for the neovim install.
sudo apt-get install libtool libtool-bin autoconf automake cmake g++ pkg-config unzip

#### Install some more from source
# TODO write a script for cloning, and making
# TODO neovim or vim suggested an alternative to make that allows easy installation
cd ~/bin
git clone https://github.com/neovim/neovim.git
cd neovim
make
sudo checkinstall

# Notification daemon for volume and brightness.
sudo apt-get install libdbus-glib-1-dev
cd ~/bin
git clone git clone git://github.com/hcchu/volnoti.git
cd volnoti
./prepare.sh
./configure
make
sudo checkinstall

# i3 status bar
sudo apt-get install ruby-ronn
git clone git://github.com/vivien/i3blocks
cd i3blocks
make clean all
sudo checkinstall

#### Python packages

# TODO make fortunes file.
#### Install the rest from deb files.
# https://launchpad.net/ubuntu/+archive/primary/+files/rofi_0.15.7-1_i386.deb
URL='http://ankisrs.net/download/mirror/anki-2.0.33.deb'
FILE=`mktemp`
wget "$URL" -O $FILE
sudo dpkg -i $FILE
rm $FILE

#### Install any mising dependencies.
sudo apt-get -f --force-yes --yes install

# TODO unsafe on work machines?
sudo apt-get autoremove -y

# TODO prompt user for email to fill this with!
# git config --global user.email "tayloredwardpeterson@gmail.com"

#### Update defaults
# TODO - make chromium default browser.

#### Link all the things!
# TODO - make smart based on file endings or some such
ln -s ~/etc/i3/config ~/.config/i3/config
ln -s ~/etc/lightdm/lightdm-gtk-greeter-ubuntu.conf /etc/lightdm/lightdm-gtk-greeter-ubuntu.conf
ln -s ~/etc/lightdm/lightdm.conf /etc/lightdm/lightdm.conf
ln -s ~/etc/accounts-service/taylor /var/lib/AccountsService/users/taylor
ln -s ~/etc/accounts-service/icons /var/lib/AccountsService/icons/taylor
ln -s ~/etc/nvim/init.vim ~/.config/nvim/init.vim

rm ~/.profile
ln -s ~/etc/.profile ~/.profile
ln -s ~/etc/monitors.xml ~/.config/monitors.xml
ln -s ~/etc/10-nvidia-brightness.conf /usr/share/X11/xorg.conf.d/10-nvidia-brightness.conf

# Sample of how Sean did it - doesn't allow linking to anywhere other than home directory.
########## Variables

dir=~/configs                    # dotfiles directory
olddir=~/.dotfiles_old           # old dotfiles backup directory

# list of files/folders to symlink in homedir
files=".vimrc .vim .aliases .prompt .bashrc .zshrc .commonrc .aprilrc .git-prompt.sh .tmux.conf .i3 .screenrc"

# create dotfiles_old in homedir
echo "Creating $olddir for backup of any existing dotfiles in ~..."
mkdir -p ~/$olddir
echo "...done"

# change to the dotfiles directory
echo "Changing to the $dir directory..."
cd $dir
echo "...done"

# move any existing dotfiles in homedir to dotfiles_old directory, then create symlinks
echo "Moving any existing dotfiles from ~ to $olddir..."
for file in $files; do
    echo "  +++> Moving $file to $olddir/$file"
    mv ~/$file ~/$olddir/
done
echo "...done"

echo "Creating symlinks from ~ to source files in $dir..."
for file in $files; do
    echo "  +++> Creating symlink for $file"
    ln -s $dir/$file ~/$file
done
echo "...done"

